[[analyzers]]
name = "nginx"
groupingKeys = ["Method", "Url", "Protocol"]
sortKeys = ["Total"]
limit = 100
diffs = ["Count", "Total", "Mean"]

[analyzers.parser]
regexp = '''^(\S+) - (\S+) \[([^\]]+)\] "(?P<Method>\S+) (?P<Url>\S+) (?P<Protocol>[^"]+)" (?P<Status>\d+) (?P<Bytes>\d+) "([^"]+)" "(?P<UserAgent>[^"]+)" (?P<ResponseTime>\S+)$'''

[[analyzers.parser.columns]]
name = "Method"
specifier.name = "Method"
converters = []

[[analyzers.parser.columns]]
name = "Url"
specifier.name = "Url"
converters = [
  { type = "ulid", options = { replacer = "(ulid)" } },
  { type = "uuid", options = { replacer = "(uuid)" } },
  { type = "queryParams", options = { replacer = "*" } },
  { type = "regexp", options = { replacer = "/assets/*", pattern = '''/assets/.*''' } },
  { type = "regexp", options = { replacer = "/images/*", pattern = '''/images/.*''' } },
]

[[analyzers.parser.columns]]
name = "Protocol"
specifier.name = "Protocol"
converters = []

[[analyzers.parser.columns]]
name = "Status"
specifier.name = "Status"
converters = [{ type = "parseInt" }]

[[analyzers.parser.columns]]
name = "Bytes"
specifier.name = "Bytes"
converters = [{ type = "parseInt" }]

[[analyzers.parser.columns]]
name = "UserAgent"
specifier.name = "UserAgent"
converters = []

[[analyzers.parser.columns]]
name = "ResponseTime"
specifier.name = "ResponseTime"
converters = [{ type = "parseFloat64" }]


[[analyzers.query]]
name = "Count"
from = "Url"
function = "count"
formatOption = { alignment = "right" }

[[analyzers.query]]
name = "Total"
from = "ResponseTime"
function = "sum"
formatOption = { alignment = "right", format = "%.3f" }

[[analyzers.query]]
name = "Mean"
from = "ResponseTime"
function = "mean"
formatOption = { alignment = "right", format = "%.4f" }

[[analyzers.query]]
name = "Stddev"
from = "ResponseTime"
function = "stddev"
formatOption = { alignment = "right", format = "%.4f" }

[[analyzers.query]]
name = "Min"
from = "ResponseTime"
function = "min"
formatOption = { alignment = "right", format = "%.4f" }

[[analyzers.query]]
name = "P50"
from = "ResponseTime"
function = "p50"
formatOption = { alignment = "right", format = "%.4f" }

[[analyzers.query]]
name = "P90"
from = "ResponseTime"
function = "p90"
formatOption = { alignment = "right", format = "%.4f" }

[[analyzers.query]]
name = "P95"
from = "ResponseTime"
function = "p95"
formatOption = { alignment = "right", format = "%.4f" }

[[analyzers.query]]
name = "P99"
from = "ResponseTime"
function = "p99"
formatOption = { alignment = "right", format = "%.4f" }

[[analyzers.query]]
name = "Max"
from = "ResponseTime"
function = "max"
formatOption = { alignment = "right", format = "%.4f" }

[[analyzers.query]]
name = "2xx"
from = "Status"
function = "count"
filter = { type = "between", options = { start = 200, end = 300 } }
formatOption = { alignment = "right" }

[[analyzers.query]]
name = "3xx"
from = "Status"
function = "count"
filter = { type = "between", options = { start = 300, end = 400 } }
formatOption = { alignment = "right" }

[[analyzers.query]]
name = "4xx"
from = "Status"
function = "count"
filter = { type = "between", options = { start = 400, end = 500 } }
formatOption = { alignment = "right" }

[[analyzers.query]]
name = "5xx"
from = "Status"
function = "count"
filter = { type = "between", options = { start = 500, end = 600 } }
formatOption = { alignment = "right" }

[[analyzers.query]]
name = "TotalBs"
from = "Bytes"
function = "sum"
formatOption = { alignment = "right", humanizeBytes = true }

[[analyzers.query]]
name = "MinBs"
from = "Bytes"
function = "min"
formatOption = { alignment = "right", humanizeBytes = true }

[[analyzers.query]]
name = "MeanBs"
from = "Bytes"
function = "mean"
formatOption = { alignment = "right", humanizeBytes = true }

[[analyzers.query]]
name = "MaxBs"
from = "Bytes"
function = "max"
formatOption = { alignment = "right", humanizeBytes = true }

[[analyzers.query]]
name = "Protocol"
from = "Protocol"
function = "any"

[[analyzers.query]]
name = "Method"
from = "Method"
function = "any"
formatOption = { alignment = "right" }

[[analyzers.query]]
name = "Url"
from = "Url"
function = "any"


[[analyzers]]
name = "mysql"
groupingKeys = ["Query"]
sortKeys = ["Total"]
limit = 100
diffs = ["Total", "Mean"]

[analyzers.parser]
regexp = '''^([0-9]{19})\s+([0-9]+)\s+(.*)$'''

[[analyzers.parser.columns]]
name = "Timestamp"
specifier.index = 1
converters = [{ type = "parseInt64" }, { type = "unixNano" }]

[[analyzers.parser.columns]]
name = "Elapsed"
specifier.index = 2
converters = [
  { type = "parseInt64" },
  { type = "div", options = { divisor = 1e9 } },
]

[[analyzers.parser.columns]]
name = "Query"
specifier.index = 3
converters = [
  { type = "regexp", options = { replacer = "(?, ...)", pattern = '''(\(\?(, \?)+\))''' } },
]

[[analyzers.query]]
name = "Count"
from = "Elapsed"
function = "count"
formatOption = { alignment = "right" }

[[analyzers.query]]
name = "Total"
from = "Elapsed"
function = "sum"
formatOption = { alignment = "right", format = "%.3f" }

[[analyzers.query]]
name = "Mean"
from = "Elapsed"
function = "mean"
formatOption = { alignment = "right", format = "%.3f" }

[[analyzers.query]]
name = "Query"
from = "Query"
function = "any"
